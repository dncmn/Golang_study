create at 2017-12-26
掉落物品的逻辑
	type DropSystem []CDropItem

type CDropItem struct {
	//Id        int32
	Id        int32
	Desc      string      // 描述
	NeedLevel []int32     // 等级范围
	Type      []int32     // 掉落类型 // 0 正常道具, 1卡牌
	Items     []int32     // 物品列表
	Probs     []int32     // 物品掉落概率（如果写成0，不走概率）
	Count     []int32     // 物品掉落数量
	RandItems []CRandItem `csv:"-"` // 概率重算
	SumProb   int32       `csv:"-"` // 总概率
}

dropItem.meta
	掉落ID	=Id	
	道具ID	=	Items	
	备注	=	Desc	
	等级限制	=	NeedLevel	
	掉落类型	=	Type	
	掉落几率	=	Probs	
	掉落数量=	Count

掉落一个奖励的逻辑。
	1、解析DropItem.csv
		在解析的时候:
			首先:重新计算一下概率和总的概率,在csv里面概率是这样的 "1000" 或者"5000|9000",要改成
		[0,5000],[5000,90000]这样的,总的概率：就是所有的掉落几率之和。
			接着:验证dropItem中的Items(掉落id)是否在item表中存在，不存在就是直接报错。
			最后:验证等级范围。
				玩家等级的最大值是80.
				NeedLevel[0]是否为0
				NeedLeve[1]是否为1
	2、从ccsvData.CDropItemMap中获取数据。
		首先,根据团队等级锁定到某一个行
		接着,判断SumProb
		if SumProb==0{
			// 直接返回数组中的第一个元素
		}else{
			// 随机一个[0,SumProb)的一个数,
			// 然后判断是哪儿一个RandProbs
		}
		最后,直接返回 dropType,dropId,dropCount,error
		