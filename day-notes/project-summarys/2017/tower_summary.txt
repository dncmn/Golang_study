##千层塔
简述:类似于口袋兽人的雷电王座。
	每一层都会有“简单”，“一般”，“困难”,三种不同难度。
	三种不同的难度对应不同
	三种难度的不同点:
			推荐战力不同
			战斗胜利以后,获取的星数不同
			战斗胜利以后,获取的奖励不同
	三种难度的相同点：
			战斗胜利结束条件一样

一、随机一个对手
二、开始战斗
三、结束战斗
四、重置
	是否开启千层塔重置
	第一层不能进行重置
	重置次数是否达到上限
	本次重置是否消耗钻石
	与本次重置对应的雷电秘宝(这个是服务器发还是前端读取,感觉是前段读取)
	
	可以购买过雷电秘宝以后，不进行重置
	可以购买过雷电秘宝以后,进行重置
	
	如果退出再进去,不会弹出购买雷电秘宝的界面
	
五、一键扫荡
	三星扫荡：在千层塔中,从第一层开始到n层,全部都是困难模式打过去的
	一键扫荡：到历史最高层数
	
	
check:
	一键扫荡开启的条件:
		三星扫荡开启的条件：
		全部扫荡开启的条件：
	是否已经扫荡过

count=HardProcess-currentProcess(三星扫荡通过的最高层数-玩家当前所在的层数)

都要处理的	

	三星扫荡的时候:(千层塔)
		可能从第一层开始三星扫荡
		可能从中间的某一层开始三星扫荡
			
		宝箱：扫荡经过的宝箱是一次性开启
		星数以及对应地加成：
			每扫荡一层，星数加三
			每次经过三层,星数减去九
			n:
				if count%3==0{ 3/6/9/12/15/18/19
					玩家当前的层数=三星扫荡通过的最高层数
					经历的星数=count*3
					出现的宝箱可数count/2  (当前是3,最高是6, 宝箱出现的个数就是6-3 / 3=1)
				}else{
				
				}
			购买BUFF:
					因为是三星扫荡,所以每一层都会获取三颗星,这时候在购买buff的时候,就自动选择消耗9颗星的BUFF
			
			

	全部扫荡的时候:
		扫荡经过的宝箱是一次性开启
			每一层获取的星数如何记录。
			找一个字段记录。这个字段的值是可变的，如果再次打的时候，获取的星数>=保存的星数,则更新这个字段
			购买BUFF：
				if count/3==0  ||(count/3==1 && count%3==0){ // 表示HistoryProcess 与 currentProcss 在同一层,也就是没有跨越宝箱
				
				}else{ 中间参杂有宝箱
				
				}
				
			
			
在兽人里面,一层三个怪物，
	首先：根据星数,选择对应的buff提成
	接着：是开启“幸运宝箱”
	然后：然后是否要额掏钻石开启宝箱(额外逃钻石的数量和钻石开启宝箱的数量是读取表格的吧)
	最后进入下一层
			
			
千层塔的BUFF怎么计算
	新建一个CommonProp      []*ExtProp
	// 额外战斗属性提升
	ExtProp struct {
		FromID    int   // 来源ID
		IsPercent bool  // 属性是否为百分比提升
		Type      int32 // 属性类型 0 为无
		Value     int64 // 属性提升数值
	}	
千层塔开始战斗
	需要参数
		千层塔层数：  id
		选择战斗模式: mode
			
			
			
			

疑问：
	1、千层塔的层数是3,是否需要把3提出来，提到常量里面。(请示以后说了不用)
	2、先三星扫荡、后一键扫荡。--（策划否定了--不能这样做)
	3、一键扫荡或者三星扫荡之后,会开启所有的宝箱，
		这时候会出现一个“取消购买”的提示,也会向服务器发送请求？？
		因为服务器要保存每一层宝箱有没有领取的状态，如果没有领取，当客户端更换另外一个设备,也会显示相同的一个页面。。。	
		
一、千层塔扫荡
	三星扫荡、一键扫荡、宝箱扫荡
1、逻辑
	1.1、普通战斗:一场战斗之后的奖励
	1.2、没三层一个buff
	1.3、开启神秘宝箱
			
兽人：一键扫荡
	正常奖励
	宝箱奖励(单独)
	选择加成
			
			
			
	1、扫荡宝箱
		case1：全开n次
		case2:单独开启某个宝箱
SweepDiamondBox map[int32]int32  // box购买次数-------在扫荡的时候,用来保存每个宝箱的可购买次数， key:towerIds value:buyCount
SweepFreeBox map[int32]bool  // 记录免费开启宝箱   key:towerId value:true  true:表示可以免费开启

扫荡宝箱: tower.SweepFreeBox  map[int32]bool  key:可开启宝箱的千层塔id   value:true
	全开n次：
		一次：
		两次：
		
		程序区分：全开一次和全开多次
		
			对于全开多次的请求：
			就是区分第一次和后面的。
			对于全开多次的宝箱，遍历tower.SweepFreeBox,
			如果值为true，则直接发送奖励。
			如果值为false,表示这个宝箱已经被单独领取过，
			这时候就要进行判断，
				如果宝箱的购买次数超过了(定量购买的次数20次),就会选择下一个宝箱

	单独领取某一个宝箱：

			tower.SweepDaimondBox[towerId]+=1
			tower.SweepFreeBox[boxId]=false  // false表示免费次数已经用完
			免费领取：不扣钻石，只需要改变两个值
			付费领取：需要口钻石(根据购买次数,消耗一定量的钻石),也需要改变这两个值
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
	

	
	