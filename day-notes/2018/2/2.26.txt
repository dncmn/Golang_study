## 2018.02.26
## daily-notes

bug fix:
	1、战场结束战斗的时候，对验证服务器返回的结果进行校验。
		避免panic
	2、要塞不发送邮件

一、
	1、了解稳定排序和不稳定排序的区别
		http://www.cnblogs.com/UnGeek/p/5645534.html
		
		不稳定的排序算法：选择排序、快速排序、希尔排序、堆排序
		稳定排序算法：冒泡排序、插入排序、归并排序和基数排序
	2、实现插入排序 
		 插入排序：是内部排序，是一种稳定排序。实现代码在github上可以看到。
	2、golang--锁机制（再重新学习一遍）
		想到之前的一个面试题：如何控制某个goroutine停止运行。
			1、如果这个goroutine里面没有死循环,那么就是自然结束。这个goroutine执行完对应的功能之后,goroutine自然就推出来了
			2、通过channel实现。
				比如在fortress里面，清理超时自动逃跑的怪物，这时候就是单独开启一个goroutine来实现(里面有死循环)。
				当程序停止的时候,就通过channel发送一个信号才跳出死循环,退出程序。
			3、context.Context来实现
	3、数据一致性（避免服务器崩掉了，然后再次登录的时候，数据发生不一致）
	
二、杂记
1、排序算法的稳定性
	通俗地讲就是能保证排序前2个相等的数其在序列的前后位置顺序和排序后它们两个的前后位置顺序相同。
	在简单形式化一下，如果Ai = Aj，Ai原来在位置前，排序后Ai还是要在Aj位置前。
2、go解析嵌套json很小的技巧
	对于嵌套的解析。可以参考这个网址
		https://medium.com/@turgon/json-in-go-is-magical-c5b71505a937
		大致就是看不懂。。。。。
		(将被嵌套的内容用子结构体包起来，然后实现encoding/json的方法。。。。。)
