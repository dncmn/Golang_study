## 2018.02.24
## daily-notes

一、bug fix
二、new feature
	1、商城中道具的购买
三、self learning
	1、归并排序。(了解基本的思想,会写出来自上向下的归并排序) ---可以利用递归,也可以利用循环
		练习代码在sort_code.go里面可以找到
	2、数据结构
		队列
		链表：
			单向、双向、循环
			
		图:-----(可能暂时还没有接触到)
			page--332
		树：(让我想到了在gin路由的时候,高性能的原因是由于Radix tree)---当时的代码看不懂。
			不理解为什么会把router url 添加到路由树里面了。		
四、突然想到的问题
	4.1、如何解决hash碰撞
		1.1、在找到的那个位置向下移动一个位置---(线性探测法)
			就是直接检查散列表中的下一个位置(将索引值加1)
		1.2、再次哈希
		1.3、使用链表来保存结果---(拉链法)
4.2、使用散列的查找算法分为两步
	第一步：用散列函数将被查找键转化为数组的一个索引
	第二步：处理哈希碰撞(处理 第一步中多个键散列到相同位置的情况)
	
	一个哈希函数能够将键转化为数组的索引。	
	4.3、拉链法
		定义：
			直接将大小为M的数组中的每个元素都指向一个链表，链表中的每个节点都存储了散列值为该元素的索引的键值对。

			拉链法在实际情况中很有用,因为每条链表确实都大约包含了N/M个键值对

		查找思路：
			首先根据三劣质找到对应的链表,
			接着沿着链表顺序查找相应地键。


商城--道具购买
	需要解决的问题：
		1、找出购买次数和购买钻石折扣的关系
		根据循环,
			target:=2
			data:=make([]int)
		for i:=0;i<l;i++{
			if data[i]<=target && targert<data[i+1]{
				// 找到目标	
			}
		}
		