1、如何区分1倍攻击和2.5倍攻击
	1倍攻击：消耗一次攻击次数
	2.5倍攻击:消耗2次攻击次数(在11点到14点之间消耗一次攻击次数)
2、开始战斗的时候,如何判断这个怪物正在被击杀。
	TFortressMonster的一个Fighting这个字段,表示战斗开始的时间。
	每次开始战斗的时候,回家上这个时间段,如果分享了，并且有其他玩家来打这个怪物
	，那么就会提示出错。
	2.1、如果怪物还有10s就要逃跑了,但是这时候,碰巧有一个玩家发现并开始击杀这个玩家,这时候该怎么处理。
		以最后一个玩家数据为准。
			在这最后的20s内,其他玩家可以看到这个正在被击杀的怪物。
			20s后
				如果这个怪物被击杀,击杀者将获取击杀奖励,触发者将获取发现奖励。
				如果这个怪物没有被杀死,击杀这获取正常的奖励,触发者将没有获取任何奖励。

击杀怪物案例:
	case1:我发现了别人分享的怪物,打了一次,没有打死(自己  奖励类型:基础奖励)
	case2:我发现了别人分享的怪物,打死了怪物(自己  奖励类型:基础奖励击杀奖励)  触发怪物的玩家:基础奖励+发现奖励+击杀奖励
	case3:我自己触发怪物:打了一次怪物,没有打死(奖励类型:基础奖励)
	case4:我自己触发怪物:打了好几次怪物,打死了(基础奖励+击杀奖励+发现奖励)
战斗结束以后

击杀奖励：判断战斗结束之后,怪物有没有被打死。
	
	
		
	
	
	

开始战斗的时候:
	param:
		id:怪物的id
		times：消耗攻击次数(前段不管选择普通攻击就发1,选择2.5倍攻击就发2)
			借助一个中间变量need来判断攻击次数是否够用
			代码：Fortress结构体中有个HalfCost字段，表示攻击次数减半活动是否开启。
		if times=2 && TFortress.halfCost==true{
			// 修改need用来判断,剩余攻击次数是否够用。
		}
		如何判断增加战斗力缓存:根据前端传递过来的times来判断。
		
		
	
   

问题：
	调用一个方法,在这个方法内对这个pid进行加锁
	
fortress bug(熟悉了这个定时发送要塞邮件的流程)
	1、要塞排行榜奖励邮件发多了。原因:发送Ipc的时候,用错了命令。
		邮件是每天五点自动发送,从数据库中找出所有的TFortressDaily

	流程

		DoLogin---> login----->mod.DB.GetUser(uids[k], true)--->this.ReadDBIpcQueue(player)

		首先,将这些数据放进   player.ipcQ.In(msg)  ipc队列里面
							type IpcMod struct {
								ipcHandlers []IpcHandler
							}
		其次,使用del命令删除数据库Ipc存储的消息

		最后,调用 mod.Ipc.Do(player)里面，调用这个函数，遍历,执行对应的ipc消息

	发送要塞邮件的流程:		
		1、五点自动重置
		2、thisMod.sendMail(功勋和伤害)
		3、SendPlayerIpc(uid和pid发送ipc消息) 
			如果玩家不在线，mod.DB.PushIpcQueue(pid,msg)
			如果玩家在线,直接添加到ipcQ里面
		































	